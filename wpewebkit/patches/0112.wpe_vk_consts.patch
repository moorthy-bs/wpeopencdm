[ONEM-12758] [ONEM-12759] Add VK_* constants to DOM window.KeyEvent interface

Jacek Manko <jacek.manko@redembedded.com>

diff --git a/Source/WebCore/CMakeLists.txt b/Source/WebCore/CMakeLists.txt
index d28c4ddef..2f66d6613 100644
--- a/Source/WebCore/CMakeLists.txt
+++ b/Source/WebCore/CMakeLists.txt
@@ -661,6 +661,7 @@ set(WebCore_NON_SVG_IDL_FILES
     page/PerformanceTiming.idl
     page/Screen.idl
     page/ScrollToOptions.idl
+    page/VkConsts.idl
     page/WebKitPoint.idl
     page/WindowEventHandlers.idl
     page/WindowOrWorkerGlobalScope.idl
@@ -2112,6 +2113,7 @@ set(WebCore_SOURCES
     page/UserContentController.cpp
     page/UserContentURLPattern.cpp
     page/VisitedLinkStore.cpp
+    page/VkConsts.cpp
     page/WheelEventDeltaFilter.cpp
     page/WheelEventTestTrigger.cpp
     page/WindowFeatures.cpp
diff --git a/Source/WebCore/dom/KeyboardEvent.idl b/Source/WebCore/dom/KeyboardEvent.idl
index 757c07793..24e0db000 100644
--- a/Source/WebCore/dom/KeyboardEvent.idl
+++ b/Source/WebCore/dom/KeyboardEvent.idl
@@ -20,6 +20,7 @@
 
 [
     Constructor(DOMString type, optional KeyboardEventInit eventInitDict),
+    DoNotCheckConstants
 ] interface KeyboardEvent : UIEvent {
 
     const unsigned long DOM_KEY_LOCATION_STANDARD = 0x00;
@@ -54,6 +55,63 @@
     void initKeyboardEvent(optional DOMString type = "undefined", optional boolean canBubble = false, optional boolean cancelable = false,
         optional DOMWindow? view = null, optional DOMString keyIdentifier = "undefined", optional unsigned long location = 0,
         optional boolean ctrlKey = false, optional boolean altKey = false, optional boolean shiftKey = false, optional boolean metaKey = false, optional boolean altGraphKey = false);
+
+    const long VK_ENTER = 13;
+    const long VK_LEFT = 37;
+    const long VK_UP = 38;
+    const long VK_RIGHT = 39;
+    const long VK_DOWN = 40;
+    const long VK_SPACE = 32;
+    const long VK_BACK_SPACE = 8;
+    const long VK_0 = 48;
+    const long VK_1 = 49;
+    const long VK_2 = 50;
+    const long VK_3 = 51;
+    const long VK_4 = 52;
+    const long VK_5 = 53;
+    const long VK_6 = 54;
+    const long VK_7 = 55;
+    const long VK_8 = 56;
+    const long VK_9 = 57;
+    const long VK_A = 65;
+    const long VK_B = 66;
+    const long VK_C = 67;
+    const long VK_D = 68;
+    const long VK_E = 69;
+    const long VK_F = 70;
+    const long VK_G = 71;
+    const long VK_H = 72;
+    const long VK_I = 73;
+    const long VK_J = 74;
+    const long VK_K = 75;
+    const long VK_L = 76;
+    const long VK_M = 77;
+    const long VK_N = 78;
+    const long VK_O = 79;
+    const long VK_P = 80;
+    const long VK_Q = 81;
+    const long VK_R = 82;
+    const long VK_S = 83;
+    const long VK_T = 84;
+    const long VK_U = 85;
+    const long VK_V = 86;
+    const long VK_W = 87;
+    const long VK_X = 88;
+    const long VK_Y = 89;
+    const long VK_Z = 90;
+    const long VK_RED = 403;
+    const long VK_GREEN = 404;
+    const long VK_YELLOW = 405;
+    const long VK_BLUE = 406;
+    const long VK_HELP  = 47;
+    const long VK_PLAY = 250;
+    const long VK_PAUSE = 19;
+    const long VK_PLAY_PAUSE = 179;
+    const long VK_STOP = 178;
+    const long VK_FAST_FWD = 228;
+    const long VK_REWIND = 227;
+    const long VK_BACK = 27;
+    const long VK_CONTEXT_MENU= 93;
 };
 
 dictionary KeyboardEventInit : EventModifierInit {
diff --git a/Source/WebCore/page/DOMWindow.cpp b/Source/WebCore/page/DOMWindow.cpp
index 37f358e1a..3c52815e2 100644
--- a/Source/WebCore/page/DOMWindow.cpp
+++ b/Source/WebCore/page/DOMWindow.cpp
@@ -102,6 +102,7 @@
 #include "SuddenTermination.h"
 #include "URL.h"
 #include "UserGestureIndicator.h"
+#include "VkConsts.h"
 #include "WebKitPoint.h"
 #include "WindowFeatures.h"
 #include "WindowFocusAllowedIndicator.h"
@@ -2338,4 +2339,13 @@ void DOMWindow::disableSuddenTermination()
         page->chrome().disableSuddenTermination();
 }
 
+RefPtr<VkConsts> DOMWindow::keyEvent() const
+{
+    if (!isCurrentlyDisplayedInFrame())
+        return nullptr;
+    if (!m_keyEvent)
+        m_keyEvent = VkConsts::create(m_frame);
+    return m_keyEvent;
+}
+
 } // namespace WebCore
diff --git a/Source/WebCore/page/DOMWindow.h b/Source/WebCore/page/DOMWindow.h
index dc79dd412..017ea4cb5 100644
--- a/Source/WebCore/page/DOMWindow.h
+++ b/Source/WebCore/page/DOMWindow.h
@@ -75,6 +75,7 @@ class Storage;
 class StyleMedia;
 class WebKitNamespace;
 class WebKitPoint;
+class VkConsts;
 
 struct WindowFeatures;
 
@@ -325,6 +326,8 @@ public:
 
     WeakPtr<DOMWindow> createWeakPtr() { return m_weakPtrFactory.createWeakPtr(); }
 
+    RefPtr<VkConsts> keyEvent() const;
+
 private:
     explicit DOMWindow(Document&);
 
@@ -376,6 +379,7 @@ private:
     mutable RefPtr<BarProp> m_statusbar;
     mutable RefPtr<BarProp> m_toolbar;
     mutable RefPtr<Location> m_location;
+    mutable RefPtr<VkConsts> m_keyEvent;
 
     String m_status;
     String m_defaultStatus;
diff --git a/Source/WebCore/page/DOMWindow.idl b/Source/WebCore/page/DOMWindow.idl
index 046f61e2d..9b04889d0 100644
--- a/Source/WebCore/page/DOMWindow.idl
+++ b/Source/WebCore/page/DOMWindow.idl
@@ -201,6 +201,8 @@ typedef USVString CSSOMString;
     [NotEnumerable, ImplementedAs=onwebkitAnimationIteration] attribute EventHandler onwebkitanimationiteration;
     [NotEnumerable, ImplementedAs=onwebkitAnimationStart] attribute EventHandler onwebkitanimationstart;
     [NotEnumerable, ImplementedAs=onwebkitTransitionEnd] attribute EventHandler onwebkittransitionend;
+
+    readonly attribute VkConsts KeyEvent;
 };
 
 DOMWindow implements GlobalCrypto;
diff --git a/Source/WebCore/page/VkConsts.cpp b/Source/WebCore/page/VkConsts.cpp
new file mode 100644
index 000000000..a735c6ecf
--- /dev/null
+++ b/Source/WebCore/page/VkConsts.cpp
@@ -0,0 +1,12 @@
+#include "VkConsts.h"
+
+#include "Frame.h"
+
+namespace WebCore {
+
+VkConsts::VkConsts(Frame* frame)
+    : DOMWindowProperty(frame)
+{
+}
+
+} // namespace WebCore
diff --git a/Source/WebCore/page/VkConsts.h b/Source/WebCore/page/VkConsts.h
new file mode 100644
index 000000000..fd4f8d054
--- /dev/null
+++ b/Source/WebCore/page/VkConsts.h
@@ -0,0 +1,21 @@
+#ifndef VKCONSTS_H
+#define VKCONSTS_H
+
+#include "DOMWindowProperty.h"
+#include <wtf/Ref.h>
+#include <wtf/RefCounted.h>
+
+namespace WebCore {
+
+class Frame;
+
+class VkConsts final : public RefCounted<VkConsts>, public DOMWindowProperty {
+public:
+    static Ref<VkConsts> create(Frame* frame) { return adoptRef(*new VkConsts(frame)); }
+
+private:
+    explicit VkConsts(Frame*);
+};
+} // namespace WebCore
+
+#endif // VKCONSTS_H
diff --git a/Source/WebCore/page/VkConsts.idl b/Source/WebCore/page/VkConsts.idl
new file mode 100644
index 000000000..8a463bdf3
--- /dev/null
+++ b/Source/WebCore/page/VkConsts.idl
@@ -0,0 +1,60 @@
+[
+    DoNotCheckConstants
+] interface VkConsts {
+    const long VK_ENTER = 13;
+    const long VK_LEFT = 37;
+    const long VK_UP = 38;
+    const long VK_RIGHT = 39;
+    const long VK_DOWN = 40;
+    const long VK_SPACE = 32;
+    const long VK_BACK_SPACE = 8;
+    const long VK_0 = 48;
+    const long VK_1 = 49;
+    const long VK_2 = 50;
+    const long VK_3 = 51;
+    const long VK_4 = 52;
+    const long VK_5 = 53;
+    const long VK_6 = 54;
+    const long VK_7 = 55;
+    const long VK_8 = 56;
+    const long VK_9 = 57;
+    const long VK_A = 65;
+    const long VK_B = 66;
+    const long VK_C = 67;
+    const long VK_D = 68;
+    const long VK_E = 69;
+    const long VK_F = 70;
+    const long VK_G = 71;
+    const long VK_H = 72;
+    const long VK_I = 73;
+    const long VK_J = 74;
+    const long VK_K = 75;
+    const long VK_L = 76;
+    const long VK_M = 77;
+    const long VK_N = 78;
+    const long VK_O = 79;
+    const long VK_P = 80;
+    const long VK_Q = 81;
+    const long VK_R = 82;
+    const long VK_S = 83;
+    const long VK_T = 84;
+    const long VK_U = 85;
+    const long VK_V = 86;
+    const long VK_W = 87;
+    const long VK_X = 88;
+    const long VK_Y = 89;
+    const long VK_Z = 90;
+    const long VK_RED = 403;
+    const long VK_GREEN = 404;
+    const long VK_YELLOW = 405;
+    const long VK_BLUE = 406;
+    const long VK_HELP  = 47;
+    const long VK_PLAY = 250;
+    const long VK_PAUSE = 19;
+    const long VK_PLAY_PAUSE = 179;
+    const long VK_STOP = 178;
+    const long VK_FAST_FWD = 228;
+    const long VK_REWIND = 227;
+    const long VK_BACK = 27;
+    const long VK_CONTEXT_MENU= 93;
+};
